<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Design | Dev and Such]]></title>
  <link href="http://echosa.github.io/blog/categories/design/atom.xml" rel="self"/>
  <link href="http://echosa.github.io/"/>
  <updated>2015-07-09T08:35:13-05:00</updated>
  <id>http://echosa.github.io/</id>
  <author>
    <name><![CDATA[Brian Zwahr]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Design Patterns, or Why Am I Just Learning This Now?!]]></title>
    <link href="http://echosa.github.io/blog/2012/08/10/design-patterns/"/>
    <updated>2012-08-10T10:41:00-05:00</updated>
    <id>http://echosa.github.io/blog/2012/08/10/design-patterns</id>
    <content type="html"><![CDATA[<p>So, at the recommendation of <a href="http://www.chrisweldon.net">a good guy I know</a> I am reading <a href="http://www.headfirstlabs.com/books/hfdp/">&ldquo;Head First Design Patterns&rdquo;</a>. So far I&rsquo;ve read the first two chapters and ZOMG WHY HAVEN&rsquo;T I READ THIS SOONER?!</p>

<p>This book is great. If you want a good, easy read (easy to read <em>and</em> easy to understand), this is it. Its sprinkled with just enough humor to keep it from getting boring (if you&rsquo;re the type to get bored by &ldquo;technical&rdquo; books, which I&rsquo;m usually not), and presents its information in real-life scenarios. The book even does a great job of anticipating and addressing concerns and questions the reader might have. In fact, a specific statement I&rsquo;ve made about design patterns in the past, namely that &ldquo;they&rsquo;re just the use of OO, right, so what&rsquo;s the big deal?&rdquo;, is addressed very early on in the book and has left me wondering how I ever got by before.</p>

<p>Keep in mind, this is not trying to be a review of the book. This blog is supposed to be about my development experiences, meaning both the applications and programs that I develop as well as my own personal development as I learn, grow, and become better at my craft. Recently, I&rsquo;ve just been hashing out code on my project at work and writing a bit of elisp which I discuss in <a href="http://emacs-journey.blogspot.com/">another blog</a>, so the only thing of interest that I have to share at the moment is my amazement at just how much I&rsquo;m learning in this book and how much more (oh, so much more) I have to learn.</p>

<p>So thank you, Chris. Thank you for introducing me to this book.</p>

<p>I also need to thank my good friend and co-worker Michael Dwyer for reading the book first and provoking me to move it to the top of my reading list. On an unrelated note, he has also started up <a href="http://www.michaelmdwyer.com">his own development blog</a>. Feel free to check it out. A good portion of it is sort of a personal diary of what he&rsquo;s working on (either personally or at work), but there are already some tips and opinions in there that are worth reading.</p>
]]></content>
  </entry>
  
</feed>
